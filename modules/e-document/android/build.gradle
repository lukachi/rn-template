apply plugin: 'com.android.library'

group = 'expo.modules.edocument'
version = '0.6.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 34)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 21)
      targetSdkVersion safeExtGet("targetSdkVersion", 34)
    }
  }
}

android {
  namespace "expo.modules.edocument"
  defaultConfig {
    versionCode 1
    versionName "0.6.0"
  }
  lintOptions {
    abortOnError false
  }
  packagingOptions {
    exclude 'org/bouncycastle/x509/CertPathReviewerMessages_de.properties'
  }
}

dependencies {
  implementation("com.google.code.gson:gson:2.10.1")

  implementation("org.bouncycastle:bcpkix-jdk15to18:1.70")
  implementation("org.jmrtd:jmrtd:0.7.27")
  implementation("net.sf.scuba:scuba-sc-android:0.0.20")
  implementation("dev.keiji.jp2:jp2-android:1.0.4")
  implementation("com.github.mhshams:jnbis:1.1.0")
}
